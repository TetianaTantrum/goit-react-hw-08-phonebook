{"version":3,"file":"static/js/111.8f962f49.chunk.js","mappings":"mTA8CaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oSAcJE,EAAQF,EAAAA,GAAAA,GAAH,qLAULG,EAAYH,EAAAA,GAAAA,MAAH,6YAoBTI,GAAeJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,+EAMZM,EAASN,EAAAA,GAAAA,OAAH,6T,wJCpFbO,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,cACPC,IAAI,GAAI,aACRH,SAAS,cAgCd,EA7BkB,WAChB,IAAMI,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEP,MAAO,GAAIE,SAAU,IACtCM,iBAAkBX,EAClBY,SAAU,SAACC,EAAQC,GACjBN,GAASO,EAAAA,EAAAA,KAAM,UAAKF,KACpBC,EAAQE,WACT,EANH,UAQE,UAAC,KAAD,YACE,UAAC,KAAD,oBAEE,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,YAAY,qBAC7C,SAAC,KAAD,CAAcF,KAAK,QAAQG,UAAU,YAEvC,UAAC,KAAD,uBAEE,SAAC,KAAD,CAAOH,KAAK,WAAWC,KAAK,WAAWC,YAAY,cACnD,SAAC,KAAD,CAAcF,KAAK,WAAWG,UAAU,YAE1C,SAAC,KAAD,CAAQF,KAAK,SAAb,wBAIP,EC7Cc,SAASG,IACtB,OACE,4BACE,uCAEA,SAAC,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikError } from 'formik';\n\n// export const Form = styled(FormikForm)`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n//   align-items: center;\n//   margin-bottom: 20px;\n// `;\n// export const FormField = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n//   justify-content: center;\n//   width: 100%;\n// `;\n\n// export const Inputs = styled(Field)`\n//   border: none;\n//   border-radius: 4px;\n//   background-color: #f2f2f2;\n//   padding: 12px 16px;\n//   transition: box-shadow 0.2s ease-in-out;\n\n//   &:focus {\n//     outline: none;\n//     box-shadow: 0px 0px 5px #0084ff80;\n//   }\n// `;\n\n// export const ErrorMessage = styled(FormikError)`\n//   font-size: 14px;\n//   color: red;\n//   padding: 0;\n// `;\n// export const Button = styled.button`\n//   font-size: 14px;\n//   text-align: center;\n//   padding: 5px 10px;\n//   color: white;\n//   background-color: #5e5e73;\n//   border-radius: 5px;\n//   max-width: 150px;\n// `;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  max-width: 500px;\n  width: 100%;\n  padding: 32px;\n  margin-bottom: 20px;\n  background-color: #ffffff;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 16px;\n  letter-spacing: 0.5px;\n  text-align: center;\n  margin-bottom: 16px;\n  color: #4f4f4f;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  width: 100%;\n  font-size: 16px;\n  color: #4f4f4f;\n  input {\n    border: none;\n    border-radius: 4px;\n    background-color: #f2f2f2;\n    padding: 12px 16px;\n    transition: box-shadow 0.2s ease-in-out;\n    &:focus {\n      outline: none;\n      box-shadow: 0px 0px 5px #0084ff80;\n    }\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 14px;\n  margin-top: 8px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 24px;\n  padding: 12px 16px;\n  border: none;\n  background-color: #148eff;\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n  &:hover {\n    background-color: #0065cc;\n  }\n`;\n","import React from 'react';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  FormField,\n  ErrorMessage,\n  Button,\n} from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operations';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(8, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={LoginSchema}\n      onSubmit={(values, actions) => {\n        dispatch(login({ ...values }));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormField>\n          Email\n          <Field name=\"email\" type=\"email\" placeholder=\"email@gmail.com\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n        </FormField>\n        <FormField>\n          Password\n          <Field name=\"password\" type=\"password\" placeholder=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n        </FormField>\n        <Button type=\"submit\">Log in</Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <title>Log in</title>\n\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","FormikForm","Title","FormField","ErrorMessage","FormikError","Button","LoginSchema","Yup","shape","email","required","password","min","max","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","login","resetForm","name","type","placeholder","component","Login"],"sourceRoot":""}