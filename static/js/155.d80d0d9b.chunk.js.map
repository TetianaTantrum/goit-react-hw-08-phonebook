{"version":3,"file":"static/js/155.d80d0d9b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactList/ContactListItem.styled.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","components/EditForm/EditForm.styled.jsx","components/EditForm/EditForm.jsx","pages/Edit.jsx","redux/contacts/selectors.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikError } from 'formik';\n\n// export const Form = styled(FormikForm)`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n//   align-items: center;\n//   margin-bottom: 20px;\n// `;\n// export const FormField = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n//   justify-content: center;\n//   width: 100%;\n// `;\n\n// export const Inputs = styled(Field)`\n//   border: none;\n//   border-radius: 4px;\n//   background-color: #f2f2f2;\n//   padding: 12px 16px;\n//   transition: box-shadow 0.2s ease-in-out;\n\n//   &:focus {\n//     outline: none;\n//     box-shadow: 0px 0px 5px #0084ff80;\n//   }\n// `;\n\n// export const ErrorMessage = styled(FormikError)`\n//   font-size: 14px;\n//   color: red;\n//   padding: 0;\n// `;\n// export const Button = styled.button`\n//   font-size: 14px;\n//   text-align: center;\n//   padding: 5px 10px;\n//   color: white;\n//   background-color: #5e5e73;\n//   border-radius: 5px;\n//   max-width: 150px;\n// `;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  max-width: 500px;\n  width: 100%;\n  padding: 32px;\n  margin-bottom: 20px;\n  background-color: #ffffff;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 16px;\n  letter-spacing: 0.5px;\n  text-align: center;\n  margin-bottom: 16px;\n  color: #4f4f4f;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  width: 100%;\n  font-size: 16px;\n  color: #4f4f4f;\n  input {\n    border: none;\n    border-radius: 4px;\n    background-color: #f2f2f2;\n    padding: 12px 16px;\n    transition: box-shadow 0.2s ease-in-out;\n    &:focus {\n      outline: none;\n      box-shadow: 0px 0px 5px #0084ff80;\n    }\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 14px;\n  margin-top: 8px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 24px;\n  padding: 12px 16px;\n  border: none;\n  background-color: #148eff;\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n  &:hover {\n    background-color: #0065cc;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const Item = styled.p`\n  padding: 0;\n  margin: 0;\n`;\nexport const ButtonEdit = styled.button`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n  margin: 0;\n  font-size: inherit;\n  font-family: inherit;\n  color: #ffa032;\n  cursor: pointer;\n`;\nexport const ButtonClose = styled.button`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n  margin: 0;\n  font-size: inherit;\n  font-family: inherit;\n  color: #ff1500;\n  cursor: pointer;\n`;\n\nexport const IconWrapperCross = styled.div`\n  position: relative;\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  background-color: transparent;\n  color: #ff1500;\n  &:hover:after {\n    content: 'Delete?';\n    position: absolute;\n    bottom: -25%;\n    left: 350%;\n    transform: translateX(-50%);\n    background-color: #fff;\n    color: #000000;\n    padding: 10px;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n    transition: transform 0.3s ease-out;\n    white-space: nowrap;\n    background-color: none;\n  }\n`;\nexport const IconWrapperEdit = styled.div`\n  position: relative;\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  background-color: transparent;\n  color: #fc851d;\n  &:hover:after {\n    content: 'Edit?';\n    position: absolute;\n    bottom: -25%;\n    left: 350%;\n    transform: translateX(-50%);\n    background-color: #fff;\n    color: #000000;\n    padding: 10px;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n    transition: transform 0.3s ease-out;\n    white-space: nowrap;\n    background-color: none;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  background-color: #f5f5f5;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: #ebebeb;\n  }\n\n  & > td {\n    padding: 12px;\n    border: none;\n  }\n`;\nexport const TableCell = styled.td`\n  padding: 10px;\n  font-size: 16px;\n  line-height: 1.4;\n  text-align: left;\n  color: #333;\n  border: none;\n  border-bottom: 1px solid #eee;\n\n  &:first-child {\n    font-weight: bold;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  max-width: 500px;\n  width: 100%;\n  padding: 32px;\n  margin-bottom: 20px;\n  background-color: #ffffff;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n`;\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n  th,\n  td {\n    padding: 0.5rem;\n    text-align: left;\n  }\n  th {\n    font-weight: bold;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 16px;\n  letter-spacing: 0.5px;\n  color: #4f4f4f;\n`;\nexport const TableRow = styled.tr`\n  &:nth-child(odd) {\n    background-color: #f2f2f2;\n  }\n`;\nexport const Cover = styled.div`\n  display: flex;\n  justify-content: end;\n  flex-direction: row;\n  gap: 12px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport {\n  IconWrapperCross,\n  IconWrapperEdit,\n  ButtonClose,\n  ButtonEdit,\n  TableCell,\n  TableRow,\n} from './ContactListItem.styled';\nimport { RxCross1 } from 'react-icons/rx';\nimport { FiEdit2 } from 'react-icons/fi';\nimport { Cover } from './ContactList.styled';\nimport Edit from 'pages/Edit';\n\nconst ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const [isEditOpen, setIsEditOpen] = useState(false);\n\n  const handleOpenEdit = () => {\n    setIsEditOpen(true);\n  };\n\n  const handleCloseEdit = () => {\n    setIsEditOpen(false);\n  };\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>{contact.name}:</TableCell>\n        <TableCell>{contact.number}</TableCell>\n        <TableCell>\n          <Cover>\n            <IconWrapperEdit>\n              <ButtonEdit type=\"button\" onClick={handleOpenEdit}>\n                <FiEdit2 size={20} />\n              </ButtonEdit>\n            </IconWrapperEdit>\n            <IconWrapperCross>\n              <ButtonClose\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(contact.id))}\n              >\n                <RxCross1 size={20} />\n              </ButtonClose>\n            </IconWrapperCross>\n          </Cover>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell colspan=\"3\">\n          {isEditOpen && (\n            <Edit contact={contact} handleCloseEdit={handleCloseEdit} />\n          )}\n        </TableCell>\n        <TableCell></TableCell>\n        <TableCell></TableCell>\n      </TableRow>\n    </>\n  );\n};\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from './ContactListItem';\nimport { Table, Wrapper } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <Wrapper>\n      <Table>\n        <caption>Contacts found: {visibleContacts.length}</caption>\n        <tbody>\n          {visibleContacts.map(contact => (\n            <ContactListItem key={contact.id} contact={contact} />\n          ))}\n        </tbody>\n      </Table>\n    </Wrapper>\n  );\n};\nexport default ContactList;\n","import React from 'react';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport {\n  Form,\n  FormField,\n  ErrorMessage,\n  Button,\n  Title,\n} from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(13, 'Too Short!')\n    .max(14, 'Too Long!')\n    .required('Required'),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        dispatch(addContact({ ...values, id: nanoid() }));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Title>Add another contact to your phonebook</Title>\n        <FormField>\n          Name\n          <Field name=\"name\" placeholder=\"Name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </FormField>\n        <FormField>\n          Number\n          <Field name=\"number\" placeholder=\"+380671234567\" />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </FormField>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  margin-bottom: 20px;\n  max-width: 500px;\n  width: 100%;\n  padding: 32px;\n  background-color: #ffffff;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  width: 100%;\n  font-size: 16px;\n  color: #4f4f4f;\n`;\nexport const Input = styled.input`\n  border: none;\n  border-radius: 4px;\n  background-color: #f2f2f2;\n  padding: 12px 16px;\n  transition: box-shadow 0.2s ease-in-out;\n  &:focus {\n    outline: none;\n    box-shadow: 0px 0px 5px #0084ff80;\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { Form, Label, Input } from './Filter.styled';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Form>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </Label>\n    </Form>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactList from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikError } from 'formik';\n\n// export const Form = styled(FormikForm)`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n//   align-items: center;\n//   margin-bottom: 20px;\n// `;\n// export const FormField = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n//   justify-content: center;\n//   width: 100%;\n// `;\n\n// export const Inputs = styled(Field)`\n//   border: none;\n//   border-radius: 4px;\n//   background-color: #f2f2f2;\n//   padding: 12px 16px;\n//   transition: box-shadow 0.2s ease-in-out;\n\n//   &:focus {\n//     outline: none;\n//     box-shadow: 0px 0px 5px #0084ff80;\n//   }\n// `;\n\n// export const ErrorMessage = styled(FormikError)`\n//   font-size: 14px;\n//   color: red;\n//   padding: 0;\n// `;\n// export const Button = styled.button`\n//   font-size: 14px;\n//   text-align: center;\n//   padding: 5px 10px;\n//   color: white;\n//   background-color: #5e5e73;\n//   border-radius: 5px;\n//   max-width: 150px;\n// `;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  /* max-width: 500px; */\n  width: 100%;\n  padding: 32px;\n  margin-bottom: 20px;\n  background-color: #ffffff;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 16px;\n  letter-spacing: 0.5px;\n  text-align: center;\n  margin-bottom: 16px;\n  color: #4f4f4f;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  width: 100%;\n  font-size: 16px;\n  color: #4f4f4f;\n  input {\n    border: none;\n    border-radius: 4px;\n    background-color: #f2f2f2;\n    padding: 12px 16px;\n    transition: box-shadow 0.2s ease-in-out;\n    &:focus {\n      outline: none;\n      box-shadow: 0px 0px 5px #0084ff80;\n    }\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 14px;\n  margin-top: 8px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 24px;\n  padding: 12px 16px;\n  border: none;\n  background-color: #148eff;\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n  &:hover {\n    background-color: #0065cc;\n  }\n`;\nexport const ButtonAdd = styled.button`\n  outline: none;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n  margin: 0;\n  font-size: inherit;\n  font-family: inherit;\n  color: #44d717;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { FcCheckmark } from 'react-icons/fc';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { IconWrapperEdit } from 'components/ContactList/ContactListItem.styled';\nimport { ButtonAdd, ErrorMessage, Form, FormField } from './EditForm.styled';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(13, 'Too Short!')\n    .max(14, 'Too Long!')\n    .required('Required'),\n});\n\nconst EditForm = ({ contact, handleCloseEdit }) => {\n  const dispatch = useDispatch();\n\n  const contactName = contact.name;\n  const contactNumber = contact.number;\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: `${contact.name}`, number: `${contact.number}` }}\n        validationSchema={ContactSchema}\n        onSubmit={(values, actions) => {\n          dispatch(\n            editContact({\n              name: values.name,\n              number: values.number,\n              id: contact.id,\n            }),\n            handleCloseEdit()\n          );\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <p>Edit this contact</p>\n          <FormField>\n            Name\n            <Field name=\"name\" placeholder={contactName} />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </FormField>\n          <FormField>\n            Number\n            <Field name=\"number\" placeholder={contactNumber} />\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </FormField>\n          <IconWrapperEdit>\n            <ButtonAdd type=\"submit\">\n              <FcCheckmark size={20} />\n            </ButtonAdd>\n          </IconWrapperEdit>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\nexport default EditForm;\n","import EditForm from 'components/EditForm/EditForm';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Edit({ contact, handleCloseEdit }) {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <EditForm contact={contact} handleCloseEdit={handleCloseEdit} />\n      {isLoading && <div>Loading...</div>}\n    </div>\n  );\n}\n\n// import EditForm from 'components/EditForm/EditForm';\n// import React from 'react';\n// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchContacts } from 'redux/contacts/operations';\n// import { selectIsLoading } from 'redux/contacts/selectors';\n\n// export default function Edit({ contact }) {\n//   const dispatch = useDispatch();\n//   const isLoading = useSelector(selectIsLoading);\n\n//   useEffect(() => {\n//     dispatch(fetchContacts());\n//   }, [dispatch]);\n\n//   return (\n//     <div>\n//       <title>Edit</title>\n//       <div>{isLoading && 'Request in progress...'}</div>\n//       <EditForm contact={contact} key={contact.id} />\n//     </div>\n//   );\n// }\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = state => {\n  return state.contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(state.filter.toLowerCase())\n  );\n};\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n"],"names":["Form","styled","FormikForm","Title","FormField","ErrorMessage","FormikError","Button","ButtonEdit","ButtonClose","IconWrapperCross","IconWrapperEdit","TableRow","TableCell","Wrapper","Table","Cover","contact","dispatch","useDispatch","useState","isEditOpen","setIsEditOpen","name","number","type","onClick","size","deleteContact","id","colspan","Edit","handleCloseEdit","visibleContacts","useSelector","selectVisibleContacts","length","map","ContactSchema","Yup","shape","min","max","required","initialValues","validationSchema","onSubmit","values","actions","addContact","nanoid","resetForm","placeholder","component","Label","Input","pattern","title","onChange","e","changeFilter","target","value","Contacts","isLoading","selectIsLoading","useEffect","fetchContacts","ButtonAdd","contactName","contactNumber","editContact","state","contacts","items","filter","toLowerCase","includes"],"sourceRoot":""}